
export type ClassName =
    | ProgramClassName
    | ProjectClassName
    | VariousClassName
    ;

export enum ProgramClassName {
    ANB = "ANB",
    BCD = "BCD_programm",
    DX = "DX",
    CPM = "CPM",
    FPM = "FPM",
    HPM = "HPM",
    IPM = "IPM",
    MPM = "MPM",
    PPM = "PPM",
    RPM = "RPM",
}

export enum ProjectClassName {
    SM = "SM",
    REG = "Registration",
    PROD = "PROD",
    NCS = "NCS",
    NBU = "NBU",
    LAUNCH = "LAUNCH",
    ITS = "ProjectIt",
    ITF = "ProjectIt_2",
    HR = "HR",
    GR = "GR",
    FIN = "FIN",
    EVENT = "EVENT",
    ES = "ES",
    CT = "CT",
    CONSTR = "CONSTR",
    TRF = "TRF",
    DPD = "DPD",
    DSD = "DSD",
    DF = "DF",
    ABB = "ABB",
    MAB = "MAB",
    MOL = "MOL",
    PROT = "PROT",
    CART = "CART",
    RNA = "RNA",
    TRANS = "TRANS",
    DISUP = "DISUP",
    OPTIM = "OPTIM",
    TSD = "TSD",
    RD = "RD",
    AS = "AS_creation",
    CRP = "CRP",
}

export enum ProjectTypeCode {
    SM = "SM",
    REG = "REG",
    PROD = "PROD",
    NCS = "NCS",
    NBU = "NBU",
    LAUNCH = "LAUNCH",
    ITS = "ITS",
    ITF = "ITF",
    HR = "HR",
    GR = "GR",
    FIN = "FIN",
    EVENT = "EVENT",
    ES = "ES",
    CT = "CT",
    CONSTR = "CONSTR",
    TRF = "TRF",
    DPD = "DPD",
    DSD = "DSD",
    DF = "DF",
    ABB = "ABB",
    MAB = "MAB",
    MOL = "MOL",
    PROT = "PROT",
    CART = "CART",
    RNA = "RNA",
    TRANS = "TRANS",
    DISUP = "DISUP",
    OPTIM = "OPTIM",
    TSD = "TSD",
    RD = "RD",
    AS = "AS",
    CRP = "CRP",
}

export const ProjectTypeMap = new Map([
    [ProjectTypeCode.SM, ProjectClassName.SM],
    [ProjectTypeCode.REG, ProjectClassName.REG],
    [ProjectTypeCode.PROD, ProjectClassName.PROD],
    [ProjectTypeCode.NCS, ProjectClassName.NCS],
    [ProjectTypeCode.NBU, ProjectClassName.NBU],
    [ProjectTypeCode.LAUNCH, ProjectClassName.LAUNCH],
    [ProjectTypeCode.ITS, ProjectClassName.ITS],
    [ProjectTypeCode.ITF, ProjectClassName.ITF],
    [ProjectTypeCode.HR, ProjectClassName.HR],
    [ProjectTypeCode.GR, ProjectClassName.GR],
    [ProjectTypeCode.FIN, ProjectClassName.FIN],
    [ProjectTypeCode.EVENT, ProjectClassName.EVENT],
    [ProjectTypeCode.ES, ProjectClassName.ES],
    [ProjectTypeCode.CT, ProjectClassName.CT],
    [ProjectTypeCode.CONSTR, ProjectClassName.CONSTR],
    [ProjectTypeCode.TRF, ProjectClassName.TRF],
    [ProjectTypeCode.DPD, ProjectClassName.DPD],
    [ProjectTypeCode.DSD, ProjectClassName.DSD],
    [ProjectTypeCode.DF, ProjectClassName.DPD],
    [ProjectTypeCode.ABB, ProjectClassName.ABB],
    [ProjectTypeCode.MAB, ProjectClassName.MAB],
    [ProjectTypeCode.MOL, ProjectClassName.MOL],
    [ProjectTypeCode.PROT, ProjectClassName.PROT],
    [ProjectTypeCode.CART, ProjectClassName.CART],
    [ProjectTypeCode.RNA, ProjectClassName.RNA],
    [ProjectTypeCode.TRANS, ProjectClassName.TRANS],
    [ProjectTypeCode.DISUP, ProjectClassName.DISUP],
    [ProjectTypeCode.OPTIM, ProjectClassName.OPTIM],
    [ProjectTypeCode.TSD, ProjectClassName.TSD],
    [ProjectTypeCode.RD, ProjectClassName.RD],
    [ProjectTypeCode.AS, ProjectClassName.AS],
    [ProjectTypeCode.CRP, ProjectClassName.CRP],
]);

export enum VariousClassName {
    portfolio = "portfolio",
    Programm = "Programm",
    ProgrammTypes = "ProgrammTypes",
    Projects = "Projects",
    ProjectType = "ProjectType",
    Tag = "Tag",
    projectlinks = "projectlinks",
    linksType = "linksType",
    tags = "tags",
    binder_type = "binder_type",
    molecular_action = "molecular_action",
    targets_domains = "targets_domains",
    isoform_ids = "isoform_ids",
    epitopes = "epitopes",
    referents = "referents",
    lims_country = "lims_country",
    packing = "packing",
    projects_criteria = "projects_criteria",
    project_sequence = "project_sequence",
    project_target = "project_target",
    test_system = "test_system",
    status = "status",
    interactions = "interactions",
    DSUser = "DSUser",
    fusion = "fusion",
    fc_type = "fc_type",
    format_ab = "format_ab",
    ErpMNN = "ErpMNN",
    molecule_2 = "molecule_2",
    manufacturer_2_2 = "manufacturer_2_2",
    transgenes = "transgenes",
    vector = "vector",
    serotype = "serotype",
    terapy_type = "terapy_type",
    stage = "stage",
    erpMeasureUnits = "erpMeasureUnits",
    Concentration_units = "Concentration_units",
    volumes = "volumes",
    purpose = "purpose",
    technology_kind = "technology_kind",
    changes_descriptions = "changes_descriptions",
    development_type = "development_type",
    limiting_patents = "limiting_patents",
    time_periods = "time_periods",
    dosage_form_afs = "dosage_form_afs",
    lims_DirLekPhorma = "lims_DirLekPhorma",
    Storage_condition = "Storage_condition",
    activeSubstance = "activeSubstance",
    packaging_afs = "packaging_afs",
    Equipment_items = "Equipment_items",
    special_marking = "special_marking",
    Transfer_form = "Transfer_form",
    Transfer_type = "Transfer_type",
    partner = "partner",
    dki_trial_types = "dki_trial_types",
    research_centre = "research_centre",
    phase_dki = "phase_dki",
    trial_groups_ncs = "trial_groups_ncs",
    Nosologies_ICD = "Nosologies_ICD",
    centre_classification = "centre_classification",
    ki_phase = "ki_phase",
    trial_groups = "trial_groups",
    control_type = "control_type",
    trial_type = "trial_type",
    comparisons_type = "comparisons_type",
    registration_type = "registration_type",
    changes_type = "changes_type",
    mer_documents = "mer_documents",
    registration_scheme = "registration_scheme",
    type_of_dates = "type_of_dates",
    product_type = "product_type",
    instructions = "instructions",
    construction_type = "construction_type",
    constr_object = "constr_object",
    renov_object = "renov_object",
    workType = "workType",
    lims_departments = "lims_departments",
    project_teams = "project_teams",
    itServices = "itServices",
    system_Type = "system_Type",
    event_Type = "event_Type",
    business_unit_type = "business_unit_type",
    method = "method",
    sample_type = "sample_type",
    trade_name = "trade_name",
    project_CT = "CT",
    dosage = "dosage",
    dosage_regimen = "dosage_regimen",
    lims_unitsERP = "lims_unitsERP",
    inject_method = "inject_method",
    preparation = "preparation",
    own_patents = "own_patents",
    researchList = "researchList",
    mnn = "mnn",
    novelty = "novelty"
}
